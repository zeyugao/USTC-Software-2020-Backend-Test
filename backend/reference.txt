使用文档：

/account/-----------------------------------用户相关的模型文件夹，实现了登录、登出和注册账户三个功能
————/models.py-----------------------定义account相关模型
————————Account----------------自定义的用户模型，继承自AbstractUser，除了用户名字段username和密码字段password外还增加了年级字段grade
————/views.py-------------------------实现的一系列功能函数
————————Login--------------------用户登录
————————Logout------------------用户登出
————————Register-----------------用户注册
————————AccountExist------------判断用户名是否已存在
————————AccountValid-----------判断用户名是否合法

/Course/-----------------------------------选课相关的模型文件夹，实现了选课、退课、列出全部课程、列出用户所在年级的全部课程、列出用户所有选中的课程以及列出一门课程所有的前置课程等功能
————/models.py-----------------------定义Course相关模型
————————Course-----------------自定义的课程模型，有课程名称字段coursename和所需年级字段grade
————————ACRelationship--------自定义的用户和课程关系模型，除了相关的课程字段course和用户字段account外，还有是否选课字段selection和是否已完成该课程字段finished
————————CCRelationship--------自定义的课程和课程关系模型，有课程字段course和前置课程字段preparatorycourse
————/views.py------------------------实现的一系列功能函数
————————ListAllCourse-----------列出全部课程
————————ChooseCourse---------选课
————————QuitCourse-------------退课
————————ListGradeCourse-------列出用户所在年级的全部课程
————————ListChosenCourse------列出用户所有选中的课程
————————ListPreparatoryCourse--列出一门课程所有的前置课程
————————CourseExist-------------判断数据库中是否存在某课程
————————AddCourse-------------向数据库中增加一门课程的数据
————————DeleteCourse-----------将某门课程的数据从数据库中删除
————————UpdateACRelationship--在数据库中增加或更新用户与某门课程之间的关系(如是否已上过了，是否已选中了)
————————AddCCRelationship-----在数据库中增加两门课程之间的关系(是否为前置课程和后续课程的关系)

错误码与对应的返回信息
1.Login
	200：登录成功
	201：账户不存在
	202：用户名或密码是空的
	203：密码错误
2.Logout
	100：登出成功
3.Register
	300：注册成功
	301：账户已存在
	302：用户名或密码是空的
	303：用户名包含非法字符，不是学校的学生ID
	304：密码中存在数字、字母和下划线之外的字符或者长度在6~20之外
	305：输入用户年级在1~4之外
4.ListAllCourse
	400：所有的课程信息
	401：系统中没有任何课程信息
5.ChooseCourse
	500：选课成功
	501：课程之前已上过
	502：课程已选上
6.QuitCourse
	700：退课成功
	701：已经上完该课程
	702：未选上这门课
7.ListGradeCourse
	800：用户所在年级的所有可选课程信息
	801：用户所在年级无可选课程
8.ListChosenCourse
	900：用户已选中的所有课程信息
	901：用户当前未选中任何课程
9.ListPreparatoryCourse
	1100：某课程所有的前置课程信息
	1101：某课程不存在任何前置课程
